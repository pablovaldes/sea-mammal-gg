{
    "contents" : "## Exercise 1: Where did the seal go?\n## Using the grammar of graphics.\nlibrary(ggplot2)\nlibrary(ggmap)\n\n## Load data\nload('Data/dat1_gps.RData')  # Loads data frame with name 'dat1_gps'\n(n <- nrow(dat1_gps))  # It's not that large.\n\n## Take a look:\nhead(dat1_gps )\n\n##\n## 1. Introduction to ggplot2\n##\n\n## Let's explore *geometries* by plotting the seal's path \n## (using ggplot2's \"quick plot\")\nqplot(lon, lat, data = dat1_gps)\nqplot(lon, lat, data = dat1_gps, geom = \"path\")\nqplot(lon, lat, data = dat1_gps, geom = c(\"path\", \"point\"))\n\n## Explore *aesthetics* (and move to ggplot2's \"full plotter\")\n#### Original plot:\nggplot(dat1_gps, aes(lon, lat)) + \n    geom_path() +\n    geom_point()\n#### Add colour for night/day; make points translucent.\n#### --> Why are \"size\" and \"alpha\" not in the aesthetic mapping 'aes'?\np <- ggplot(dat1_gps, aes(lon, lat)) + \n    geom_path(aes(colour = night, group = 1), size = 1) +\n    geom_point(alpha = 0.2)\np\n\n## Change the *labels* and *look* of the plot\np + labs(x = \"Longitude\\n(Degrees)\", \n         y = \"Latitude\\n(Degrees)\", \n         title = \"A Northern Fur Seal's Trip to Sea\") +\n    scale_colour_discrete(\"Time of Day\", \n                          labels = c(\"Day-time\", \"Night-time\")) +\n    theme(axis.title.y = element_text(angle = 0),\n          plot.title = element_text(face = \"bold\", size = 14),\n          legend.position = \"bottom\")\n#### There are many many looks you can change. Take a look at:\n?theme\n\n## Handy trick: save the \"layers\"\nplus <- list(geom_path(aes(colour = night, group = 1), size = 1),\n             geom_point(alpha = 0.2),\n             labs(x = \"Longitude\\n(Degrees)\", \n                  y = \"Latitude\\n(Degrees)\", \n                  title = \"A Northern Fur Seal's Trip to Sea\"),\n             scale_colour_discrete(\"Time of Day\", \n                                   labels = c(\"Day-time\", \"Night-time\")),\n             theme(axis.title.y = element_text(angle = 0),\n                   plot.title = element_text(face = \"bold\", size = 14),\n                   legend.position = \"bottom\"))\n#### Achieve the same plot by:\nggplot(dat1_gps, aes(lon, lat)) + plus\n\n##\n## 2. Introduction to ggmap\n##\n\n## Get a map:\n#### From Google Maps (default):\nmy_map_goo <- get_map(c(mean(dat1_gps$lon), mean(dat1_gps$lat)), \n                        zoom = 8, maptype = \"satellite\")\nggmap(my_map_goo)   # View it.\n\n#### From OpenStreetMap\n#### (I'll use the osm-specific \"get_\" function)\nmy_map_osm <- get_openstreetmap(c(-170.5, 56.5, -168, 57.75))\nggmap(my_map_osm)   # View it.\n\n## Overlay the original trackplot:\np2 <- ggmap(my_map_osm, base_layer = ggplot(dat1_gps, aes(lon, lat))) +\n    plus\np2\n\n## Finally, let's annotate the plot with an overview map\n#### Get small-scale map\noverview <- get_googlemap(c(mean(dat1_gps$lon), mean(dat1_gps$lat)),\n                          zoom = 4, maptype = \"satellite\",\n                          markers = data.frame(longitude=mean(dat1_gps$lon), \n                                               latitude=mean(dat1_gps$lat)))\n#### Take a look:\nggmap(overview)\n#### Add it to the original:\np2 + inset_raster(overview, xmin=-168.75, xmax=-168, ymin=56.5, ymax=56.875) +\n    annotate(\"rect\", xmin=-168.75, xmax=-168, ymin=56.5, ymax=56.875,\n             colour=\"black\", fill=NA)\n",
    "created" : 1430599277755.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "175059034",
    "id" : "4B122678",
    "lastKnownWriteTime" : 1431146238,
    "path" : "~/Documents/ActiveProjects/SMTG_vis/gg_demo/1-GPS_data.R",
    "project_path" : "1-GPS_data.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}